/**
* @file _flow.scss
* @author zack@thestrongelement.com
*/


/*
    .flow
    &.flex--
        .flow__box
*/

$box_gutter: $width--ui-padding;

// COLUMNS
%flow {
    @include clearfix;
    @include screen(m) {
      [class*=flow__box] {
        float: left;
        margin-right: $box_gutter;
        &:last-child {
          margin-right: 0;
        }
        &.center-- {
          //this can only be used when there is a single container
          float: none;
          margin: 0 auto;
        }
      }
    }
}
.flow, .flow--reverse {
    @extend %flow;
}
//reverse order (right to left)
.flow--reverse {
  @include screen(m) {
    [class*=flow__box] {
      float: right;
      margin-left: $box_gutter;
      margin-right: 0;
      &:last-child {
        margin-left: 0;
      }
    }
  }
}


// FLEX
%flex {
  display: flex;
  justify-content: space-between;
  flex-direction: column;
  @include screen(m) {
    flex-direction: row;
  }
}
.flow--flex {
  @extend %flex;
  @include screen(m) {
    //these override order for largescreens (see POS upsell for example)
    .order-1-- {
      order: 1;
    }
    .order-2-- {
      order: 2;    
    }
    .order-3-- {
      order: 3;    
    }
  }
}


// FLOW BOXES
$cols: 2 3 4 5 6 7 8 9 10 11 12;

//set base column widths for 2-12 cols
//everything stacks under screen(m)
@include screen(m) {

  @for $i from 2 through 12 {
    [class*=flow__box--#{$i}] {
      width: calc(((100% - (#{$box_gutter}*#{$i - 1}))/#{$i});
    }
  }
  
  
  @for $i from 3 through 12 {
    .flow__box {
      @for $j from 2 through $i {
        &--#{$i}-#{$j} {
          width: calc(((((100% - (#{$box_gutter}*#{$i - 1}))/#{$i})*#{$j})) + (#{$box_gutter}*#{$j - 1}));
        }
      }
    } 
  }

}
//set spanned colum widths
//.flow__box {
//  @include screen(m) {
//    &--3-2 {
//      width: calc(((100% - #{$box_gutter})/3)*2);
//    }
//    &--10-4 {
//      width: calc(((100% - #{$box_gutter})/10)*4);
//    }
//    &--10-6 {
//      width: calc(((100% - #{$box_gutter})/10)*6);
//    }
//  }
//}

//
//@each $num in $cols {
//  [class*=flow__box--#{$num}] {
//    @include screen(m) {
//        width: calc((100% - #{$box_gutter}*#{$num})/#{$num});
//    }
//  }
//}
/*

[class*=flow__box--2] {
  @include screen(m) {
      width: calc((100% - #{$box_gutter})/2);
  }
}
[class*=flow__box--3] {
  @include screen(m) {
    width: calc((100% - #{$box_gutter})/3);
  }
} 
[class*=flow__box--10] {
  @include screen(m) {
    width: calc((100% - #{$box_gutter})/10);
    &.shift-1-- {      
      margin-left: calc((100% - #{$box_gutter})/10);
    }
    //this is not intutive for reverse flow (can do better)
    &.pull-1-- {
      margin-right: calc((100% - #{$box_gutter})/10) !important;
    }
  }
} 
.flow__box {
  @include screen(m) {
    &--3-2 {
      width: calc(((100% - #{$box_gutter})/3)*2);
    }
    &--10-4 {
      width: calc(((100% - #{$box_gutter})/10)*4);
    }
    &--10-6 {
      width: calc(((100% - #{$box_gutter})/10)*6);
    }
  }
}
*/










/*

%flex {
  .square-- {
    min-height: 100vw;
    @include screen(xs) {
      min-height: calc(50vw);
    }
    @include screen(s) {
      min-height: calc(40vw);
    }
    @include screen(m) {
      min-height: 0;
    }
  }
  @include screen(m) {
    display: flex;
    & > .flow__box {
      flex: 1;
    }
  }
}

.flow--flex {
  @extend %flex;
}
.flow__box {
  //2 cols
  &--2-1 {
    flex: 1;
  }
  &--2-1 {
    &.square-- {
      @include screen(l) {
        height: calc(100vw/2);
      }
      @include screen(xl) {
        max-height: calc(#{$width--ui-max}/2);
      }
    }
  }
  //3 cols
  &--3-1 {
    flex: 1;
  }
  &--3-2 {
    flex: 2;
  }
  &--3-1, &--3-2 {
    &.square-- {
      @include screen(m) {
        height: calc(100vw/3);
      }
      @include screen(xl) {
        max-height: calc(#{$width--ui-max}/3);
      }
    }
  }
  //4 cols
  &--4-1 {
    flex: 1;
  }
  &--4-2 {
    flex: 2;
  }
  &--4-3 {
    flex: 3;
  }
  &--4-1, &--4-2, &--4-3 {
    &.square-- {
      @include screen(m) {
        height: calc(100vw/4);
      }
      @include screen(xl) {
        max-height: calc(#{$width--ui-max}/4);
      }
    }
  }

}


*/